name: winbuild
on: [push]

jobs:
  vcpkg:
    needs: build-qt
    name: Build for Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
    env:
      VCPKG_ROOT: 'C:/src'
      CMAKE_BUILD_DIR: C:/builddir/
      VCPKG_SHA: qgis

    steps:
      - name: Show space before build
        run: |
          Get-PSDrive

      - name: Check LongPathsEnabled
        run: |
          (Get-ItemProperty "HKLM:System\CurrentControlSet\Control\FileSystem").LongPathsEnabled
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Bootstrap vcpkg
        run: |
          git clone https://github.com/m-kuhn/vcpkg.git "${{ env.VCPKG_ROOT }}"
          cd "${{ env.VCPKG_ROOT }}"
          git checkout "${{ env.VCPKG_SHA }}"
          .\bootstrap-vcpkg.bat

      - name: Restore vcpkg and its artifacts
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          # The first path is where vcpkg generates artifacts while consuming the vcpkg.json manifest file.
          # The second path is the location of vcpkg (it contains the vcpkg executable and data files).
          # The other paths starting with '!' are exclusions: they contain temporary files generated during the build of the installed packages.
          path: |
            ${{ env.CMAKE_BUILD_DIR }}/vcpkg_installed/
            ${{ env.VCPKG_ROOT }}
            !${{ env.VCPKG_ROOT }}/buildtrees
            !${{ env.VCPKG_ROOT }}/packages
            !${{ env.VCPKG_ROOT }}/downloads
          # The key is composed in a way that it gets properly invalidated: this must happen whenever vcpkg's Git commit id changes, or the list of packages changes. In this case a cache miss must happen and a new entry with a new key with be pushed to GitHub the cache service.
          # The key includes: hash of the vcpkg.json file, the hash of the vcpkg Git commit id, and the used vcpkg's triplet. The vcpkg's commit id would suffice, but computing an hash out it does not harm.
          # Note: given a key, the cache content is immutable. If a cache entry has been created improperly, in order the recreate the right content the key must be changed as well, and it must be brand new (i.e. not existing already).
          key: |
            ${{ hashFiles( 'vcpkg.json' ) }}-${{ env.VCPKG_SHA }}-${{ matrix.triplet }}-invalidate
          restore-keys: |
            ${{ hashFiles( 'vcpkg.json' ) }}-${{ env.VCPKG_SHA }}-${{ matrix.triplet }}-qt
    
      # Target x64 and use the default Windows SDK
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Install dependencies and generate project files
        run: |
          cmake -S "${{ github.workspace }}" -B "${{ env.CMAKE_BUILD_DIR }}" -GNinja -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake"

      # - name: Upload Build Logs
      #   uses: actions/upload-artifact@v2
      #   if: always()
      #   with:
      #     name: build-logs
      #     path: C:/src/buildtrees/**/*.log

      - name: Build
        run: |
          cmake --build "${{ env.CMAKE_BUILD_DIR }}"

      - name: Show space after build
        if: always()
        run: |
          Get-PSDrive

  # This is just a helper to seed the cache so we can stay
  # within the github job time limit of 6 hours
  build-qt:
    name: Build Qt for Windows
    runs-on: windows-latest
    env:
      VCPKG_ROOT: 'C:/src'
      CMAKE_BUILD_DIR: C:/builddir/
      VCPKG_SHA: qgis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Bootstrap vcpkg
        run: |
          git clone https://github.com/m-kuhn/vcpkg.git "${{ env.VCPKG_ROOT }}"
          cd "${{ env.VCPKG_ROOT }}"
          git checkout "${{ env.VCPKG_SHA }}"
          .\bootstrap-vcpkg.bat

      - name: Restore vcpkg and its artifacts
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.CMAKE_BUILD_DIR }}/vcpkg_installed/
            ${{ env.VCPKG_ROOT }}
            !${{ env.VCPKG_ROOT }}/buildtrees
            !${{ env.VCPKG_ROOT }}/packages
            !${{ env.VCPKG_ROOT }}/downloads
          key: |
            ${{ hashFiles( 'vcpkg.json' ) }}-${{ env.VCPKG_SHA }}-${{ matrix.triplet }}-qt

      - name: Preseed Qt
        run: |
          cd ${{ env.VCPKG_ROOT }}
          .\vcpkg.exe install --triplet x64-windows qt5-declarative qt5-sensors qt5-webview qt5-connectivity qt5-quickcontrols2 qt5-declarative qt5-location qt5-charts qt5-multimedia