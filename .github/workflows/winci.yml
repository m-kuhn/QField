name: winbuild
on: [push, pull_request]

jobs:
  vcpkg:
    needs: build-qt
    name: Build for Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
    env:
      VCPKG_ROOT: 'C:/src'
      CMAKE_BUILD_DIR: C:/builddir/
      VCPKG_SHA: qgis
      VCPKG_DEFAULT_BINARY_CACHE: C:/vcpkg_cache

    steps:
      - name: Show space before build
        run: |
          Get-PSDrive

      - name: Check LongPathsEnabled
        run: |
          (Get-ItemProperty "HKLM:System\CurrentControlSet\Control\FileSystem").LongPathsEnabled
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Bootstrap vcpkg
        run: |
          git clone https://github.com/m-kuhn/vcpkg.git "${{ env.VCPKG_ROOT }}"
          cd "${{ env.VCPKG_ROOT }}"
          git checkout "${{ env.VCPKG_SHA }}"
          .\bootstrap-vcpkg.bat
          mkdir ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}

      - name: Restore vcpkg and its artifacts
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
          key: |
            ${{ hashFiles( 'vcpkg.json' ) }}-${{ env.VCPKG_SHA }}-${{ matrix.triplet }}-invalidate
          restore-keys: |
            ${{ hashFiles( 'vcpkg.json' ) }}-${{ env.VCPKG_SHA }}-${{ matrix.triplet }}-qt
    
      # Target x64 and use the default Windows SDK
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Install dependencies and generate project files
        run: |
          cmake -S "${{ github.workspace }}" -B "${{ env.CMAKE_BUILD_DIR }}" -GNinja -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake"

      # - name: Upload Build Logs
      #   uses: actions/upload-artifact@v2
      #   if: always()
      #   with:
      #     name: build-logs
      #     path: C:/src/buildtrees/**/*.log

      - name: Build
        run: |
          cmake --build "${{ env.CMAKE_BUILD_DIR }}"

      - name: Show space after build
        if: always()
        run: |
          Get-PSDrive

  # This is just a helper to seed the cache so we can stay
  # within the github job time limit of 6 hours
  build-qt:
    name: Build Qt for Windows
    runs-on: windows-latest
    env:
      VCPKG_ROOT: 'C:/src'
      CMAKE_BUILD_DIR: C:/builddir/
      VCPKG_SHA: qgis
      VCPKG_DEFAULT_BINARY_CACHE: C:/vcpkg_cache

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Bootstrap vcpkg
        run: |
          git clone https://github.com/m-kuhn/vcpkg.git "${{ env.VCPKG_ROOT }}"
          cd "${{ env.VCPKG_ROOT }}"
          git checkout "${{ env.VCPKG_SHA }}"
          .\bootstrap-vcpkg.bat
          mkdir ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}

      - name: Restore vcpkg and its artifacts
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
          key: |
            ${{ hashFiles( 'vcpkg.json' ) }}-${{ env.VCPKG_SHA }}-${{ matrix.triplet }}-qt

      - name: Preseed Qt
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cd ${{ env.VCPKG_ROOT }}
          .\vcpkg.exe install --triplet x64-windows qt5-declarative qt5-sensors qt5-webview qt5-connectivity qt5-quickcontrols2 qt5-declarative qt5-location qt5-charts qt5-multimedia
